{"type":"cy:bean","properties":{"beanType@STRING":"cy:requiremodule","name@STRING":"Browser","dependencies@STRING":["/libs/vendor/jquery","/libs/bndly/data/scripts/cy/Class","/libs/bndly/data/scripts/cy/SearchTableDataProvider","/libs/bndly/data/scripts/cy/RestBeans","/libs/bndly/data/scripts/cy/Collection","/libs/bndly/data/scripts/cy/LabelFunctions","/libs/bndly/data/scripts/cy/FormBinder","/libs/bndly/data/scripts/cy/CopyUtil","/libs/bndly/data/scripts/cy/relations/Relations","/libs/bndly/data/scripts/cy/RelationFormBinder","/libs/bndly/data/scripts/cy/SearchConfiguration","/libs/bndly/data/scripts/cy/SearchConfiguration","/libs/bndly/data/scripts/cy/EntityTableDataProvider","/libs/bndly/data/scripts/cy/form/Forms","/libs/bndly/data/scripts/cy/Expression","/libs/bndly/data/scripts/cy/Expression","/libs/bndly/data/scripts/cy/Expression","/libs/vendor/hogan"],"script@STRING":"var EntityBrowser = Class.extend({\r\n\tconstruct: function(config) {\r\n\t},\r\n\tbindTo: function(target) {\r\n\t\tif(target.EntityBrowser) {\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tvar wrapper = $(target),\r\n\t\t\t_searchForm = wrapper.find(\".entity-searchform\"),\r\n\t\t\t_toolbar = wrapper.find(\".entity-toolbar\"),\r\n\t\t\t_table = wrapper.find(\".entity-table\"),\r\n\t\t\t_pagination = wrapper.find(\".entity-pagination\"),\r\n\t\t\treferencerestbean = wrapper.data(\"referencerestbean\"),\r\n\t\t\trestbean = wrapper.data(\"restbean\"),\r\n\t\t\tlistrestbean = wrapper.data(\"listrestbean\"),\r\n\t\t\tentityType = wrapper.data(\"entity-type\"),\r\n\t\t\tform = wrapper.siblings(\".entity-browser-form\"),\r\n\t\t\tformButtons = form.find(\".entity-browser-form-buttons\"),\r\n\t\t\tthat = this\r\n\t\t;\r\n\t\tthis.wrapper = wrapper;\r\n\t\tthis.form = form;\r\n\t\tthis.formTitle = form.find(\"h1\");\r\n\t\tthis.formButtons = formButtons;\r\n\t\tthis.url = wrapper.data(\"url\");\r\n\t\tthis.referencerestbean = referencerestbean;\r\n\t\tthis.restbean = restbean;\r\n\t\tthis.listrestbean = listrestbean;\r\n\t\t\r\n\t\tthis.formButtons.find(\"button[data-semantic]\").each(function(){\r\n\t\t\tvar button = $(this),\r\n\t\t\t\tsemantic = button.data(\"semantic\")\r\n\t\t\t;\r\n\t\t\tbutton.on(\"click\", function(e) {\r\n\t\t\t\tthat[semantic](e);\r\n\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t\tthis.searchForm = _searchForm;\r\n\t\tthis.searchFormInput = this.searchForm.find(\"input[type='text']\").first();\r\n\t\tthis.searchForm.on(\"submit\", function(e){\r\n\t\t\tif(that.dataProvider && that.dataProvider.setSearchTerm) {\r\n\t\t\t\tthat.dataProvider.setSearchTerm(that.searchFormInput.val());\r\n\t\t\t\tthat.dataProvider.loadPage();\r\n\t\t\t}\r\n\t\t\te.preventDefault();\r\n\t\t\treturn false;\r\n\t\t});\r\n\t\t\r\n\t\tthis.table = _table;\r\n\t\tthis.tableBody = this.table.children(\"tbody\");\r\n\t\tthis.tableHead = this.table.children(\"thead\");\r\n\r\n\t\tthis.toolbar = _toolbar;\r\n\t\tthis.toolbarButtonsBySemantic = {};\r\n\t\tthis.toolbar.find(\"a[data-semantic]\").each(function(){\r\n\t\t\tvar btn = $(this),\r\n\t\t\t\tsemantic = btn.data(\"semantic\"),\r\n\t\t\t\tclickCallback = that[semantic]\r\n\t\t\t;\r\n\t\t\tthat.toolbarButtonsBySemantic[semantic] = btn;\r\n\t\t\tif(clickCallback) {\r\n\t\t\t\tbtn.on(\"click\", function(e){\r\n\t\t\t\t\tclickCallback.call(that, e);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.pagination = _pagination;\r\n\t\tthis.paginationButtons = new Collection({\r\n\t\t\tlisteners: {\r\n\t\t\t\tremoved: function(removedItem){\r\n\t\t\t\t\tremovedItem.remove();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.pagination.find(\"li\").each(function() {\r\n\t\t\tvar li = this,\r\n\t\t\t\tbtns = $(li).find(\"a[data-semantic]\")\r\n\t\t\t;\r\n\t\t\tbtns.each(function(){\r\n\t\t\t\tvar btn = $(this),\r\n\t\t\t\t\tsemantic = btn.data(\"semantic\")\r\n\t\t\t\t;\r\n\t\t\t\tif(semantic === \"previous\") {\r\n\t\t\t\t\tthat.previousPageBtn = $(li);\r\n\t\t\t\t\tbtn.on(\"click\", function(e){\r\n\t\t\t\t\t\tthat.previousPage();\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if(semantic === \"next\") {\r\n\t\t\t\t\tthat.nextPageBtn = $(li);\r\n\t\t\t\t\tbtn.on(\"click\", function(e){\r\n\t\t\t\t\t\tthat.nextPage();\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\tthis.paginationTemplate = this.pagination.data(\"template\");\r\n\t\t\r\n\t\t// init the data provider etc.\r\n\t\t$.ajax({\r\n\t\t\turl: this.url,\r\n\t\t\theaders: {\r\n\t\t\t\tAccept: \"application/json\"\r\n\t\t\t},\r\n\t\t\tsuccess: function(data, status, xhr) {\r\n\t\t\t\tvar type = RestBeans[listrestbean]\r\n\t\t\t\t\tlist = new type(),\r\n\t\t\t\t\tk = null\r\n\t\t\t\t;\r\n\t\t\t\tfor(k in data) {\r\n\t\t\t\t\tif(data[k]) {\r\n\t\t\t\t\t\tlist.loadData(data[k]);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthat.initialPage = list;\r\n\t\t\t\tif(list.hasLink(\"search\") && SearchConfiguration[referencerestbean]) {\r\n\t\t\t\t\tthat.searchForm.removeClass(\"hidden\");\r\n\t\t\t\t\tthat.toolbarButtonsBySemantic[\"reindex\"].removeClass(\"disabled\");\r\n\t\t\t\t\tthat.dataProvider = new SearchTableDataProvider({\r\n\t\t\t\t\t\tentityType: restbean\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"search support not available\");\r\n\t\t\t\t\tthat.dataProvider = new EntityTableDataProvider({\r\n\t\t\t\t\t\tentityType: restbean\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthat.dataProvider.addListener(\"load\", that.didLoadItems, that);\r\n\t\t\t\tthat.dataProvider.loadPage();\r\n\t\t\t},\r\n\t\t\terror: function(xhr, status, error) {\r\n\t\t\t\tconsole.log(status);\r\n\t\t\t}\r\n\t\t});\r\n\t\ttarget.EntityBrowser = this;\r\n\t},\r\n\tdidLoadItems: function(items) {\r\n\t\tif(this.nextPageBtn) {\r\n\t\t\tthis.nextPageBtn.removeClass(\"disabled\");\r\n\t\t}\r\n\t\tif(this.previousPageBtn) {\r\n\t\t\tthis.previousPageBtn.removeClass(\"disabled\");\r\n\t\t}\r\n\t\tthis.paginationButtons.clear();\r\n\t\tvar i = 0,\r\n\t\t\ttmpl = null\r\n\t\t;\r\n\t\tfor(i=0;i<this.dataProvider.getTotalPages(); i++) {\r\n\t\t\ttmpl = $(this.paginationTemplate);\r\n\t\t\ttmpl.find(\".entity-pagignation-page\").text(\"\"+(i+1));\r\n\t\t\ttmpl.on(\"click\", this.createGoToPageCallback(i).bind(this));\r\n\t\t\tthis.paginationButtons.add(tmpl);\r\n\t\t\ttmpl.insertBefore(this.nextPageBtn);\r\n\t\t}\r\n\t\tthis.renderItems(items);\r\n\t},\r\n\trenderItems: function(items) {\r\n\t\tvar that = this;\r\n\t\tthis.tableBody.children().remove();\r\n\t\titems.each(function(item) {\r\n\t\t\tvar row = $(\"<tr></tr>\"),\r\n\t\t\t\tactionTemplate = this.table.data(\"action-template\")\r\n\t\t\t\tactionConfirmTemplate = this.table.data(\"action-confirm-template\")\r\n\t\t\t;\r\n\t\t\tthis.tableHead.find(\"th\").each(function(){\r\n\t\t\t\tvar th = $(this),\r\n\t\t\t\t\tfield = th.data(\"field\"),\r\n\t\t\t\t\t//fieldValue = field === undefined ? undefined : item.get(field),\r\n\t\t\t\t\tfieldValue = field === undefined ? undefined : new Expression({root: item, path: field}).resolve(),\r\n\t\t\t\t\tcell = $(\"<td></td>\")\r\n\t\t\t\t;\r\n\t\t\t\tif(field) {\r\n\t\t\t\t\tif(fieldValue !== undefined) {\r\n\t\t\t\t\t\tif(typeof(fieldValue.clazzName) === \"function\") {\r\n\t\t\t\t\t\t\tcell.text(LabelFunctions(fieldValue));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcell.text(fieldValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(actionTemplate) {\r\n\t\t\t\t\t\tvar tpl = $(actionTemplate),\r\n\t\t\t\t\t\t\tconfirmTpl = $(actionConfirmTemplate),\r\n\t\t\t\t\t\t\tcurrentActionCallback = undefined\r\n\t\t\t\t\t\t;\r\n\t\t\t\t\t\ttpl.appendTo(cell).find(\"button[data-semantic]\").each(function(){\r\n\t\t\t\t\t\t\tvar button = $(this),\r\n\t\t\t\t\t\t\t\tsemantic = button.data(\"semantic\"),\r\n\t\t\t\t\t\t\t\tisTwoStep = button.data(\"two-step\")\r\n\t\t\t\t\t\t\t;\r\n\t\t\t\t\t\t\tif(that[semantic]) {\r\n\t\t\t\t\t\t\t\tif(isTwoStep) {\r\n\t\t\t\t\t\t\t\t\tbutton.on(\"click\", function(e) {\r\n\t\t\t\t\t\t\t\t\t\ttpl.addClass(\"hidden\");\r\n\t\t\t\t\t\t\t\t\t\tconfirmTpl.removeClass(\"hidden\");\r\n\t\t\t\t\t\t\t\t\t\tcurrentActionCallback = function(e) {\r\n\t\t\t\t\t\t\t\t\t\t\tthat[semantic](e, item);\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tbutton.on(\"click\", function(e) {\r\n\t\t\t\t\t\t\t\t\t\tthat[semantic](e, item);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tconfirmTpl.addClass(\"hidden\").appendTo(cell).find(\"button[data-semantic]\").each(function() {\r\n\t\t\t\t\t\t\tvar button = $(this),\r\n\t\t\t\t\t\t\t\tsemantic = button.data(\"semantic\")\r\n\t\t\t\t\t\t\t;\r\n\t\t\t\t\t\t\tbutton.on(\"click\", function(e) {\r\n\t\t\t\t\t\t\t\ttpl.removeClass(\"hidden\");\r\n\t\t\t\t\t\t\t\tconfirmTpl.addClass(\"hidden\");\r\n\t\t\t\t\t\t\t\tif(semantic === \"confirm\") {\r\n\t\t\t\t\t\t\t\t\tcurrentActionCallback(e);\r\n\t\t\t\t\t\t\t\t\tcurrentActionCallback = undefined;\r\n\t\t\t\t\t\t\t\t} else if(semantic === \"cancel\") {\r\n\t\t\t\t\t\t\t\t\tcurrentActionCallback = undefined;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\trow.append(cell);\r\n\t\t\t});\r\n\t\t\tthis.tableBody.append(row);\r\n\t\t}, this);\r\n\t},\r\n\tcreateGoToPageCallback: function(index) {\r\n\t\treturn function(e) {\r\n\t\t\tthis.dataProvider.setPageOffset(index*this.dataProvider.getPageSize(), true);\r\n\t\t\te.preventDefault();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tedit: function(e, item) {\r\n\t\tvar modalConfig = {},\r\n\t\t\ttitle = this.formTitle.data(\"existing-item-title\"),\r\n\t\t\ttitleTemplate = null,\r\n\t\t\tdata = {\r\n\t\t\t\tmodel: LabelFunctions(item)\r\n\t\t\t}\r\n\t\t;\r\n\t\t\r\n\t\tif(title) {\r\n\t\t\ttitleTemplate = Hogan.compile(title);\r\n\t\t\tthis.formTitle.removeClass(\"hidden\");\r\n\t\t\tthis.formTitle.text(titleTemplate.render(data));\r\n\t\t} else {\r\n\t\t\tif(!this.formTitle.is(\".hidden\")) {\r\n\t\t\t\tthis.formTitle.addClass(\"hidden\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.wrapper.addClass(\"hidden\");\r\n\t\tthis.form.removeClass(\"hidden\");\r\n\t\tthis.openForm(item, true, \"New \" + this.restbean, modalConfig, false);\r\n\t\tif(e) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tremove: function(e, item) {\r\n\t\titem.addSingleInvocationListener(\"removed\", function(e) {\r\n\t\t\tthis.reload();\r\n\t\t}, this);\r\n\t\titem.remove();\r\n\t},\r\n\tnew: function(e) {\r\n\t\tvar modalConfig = {},\r\n\t\t\ttitle = this.formTitle.data(\"new-item-title\"),\r\n\t\t\ttitleTemplate = null,\r\n\t\t\tdata = {\r\n\t\t\t\tmodel: \"\"\r\n\t\t\t}\r\n\t\t;\r\n\t\t\r\n\t\tif(title) {\r\n\t\t\ttitleTemplate = Hogan.compile(title);\r\n\t\t\tthis.formTitle.removeClass(\"hidden\");\r\n\t\t\tthis.formTitle.text(titleTemplate.render(data));\r\n\t\t} else {\r\n\t\t\tif(!this.formTitle.is(\".hidden\")) {\r\n\t\t\t\tthis.formTitle.addClass(\"hidden\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.wrapper.addClass(\"hidden\");\r\n\t\tthis.form.removeClass(\"hidden\");\r\n\t\tthis.openForm(new RestBeans[this.restbean](), false, \"New \" + this.restbean, modalConfig, false);\r\n\t\tif(e) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\topenForm: function(entry, reload, title, modalConfig, readOnly) {\r\n\t\tif (reload) {\r\n\t\t\tentry.addSingleInvocationListener(\"reloaded\", function(e) {\r\n\t\t\t\tthis.openForm(e, false, title, modalConfig, readOnly);\r\n\t\t\t}, this);\r\n\t\t\tentry.reload();\r\n\t\t} else {\r\n\t\t\tthis.formButtons.detach();\r\n\t\t\tvar view = this.buildForm(entry, readOnly);\r\n\t\t\tview.renderTo(this.form);\r\n\t\t\tthis.activeView = view;\r\n\t\t\tthis.formButtons.appendTo(this.form);\r\n\t\t}\r\n\t},\r\n\tbuildForm: function(entity, readOnly) {\r\n\t\tvar relationsForEntity, \r\n\t\t\tentityType = entity.clazzName(),\r\n\t\t\tview\r\n\t\t;\r\n\t\ttry {\r\n\t\t\trelationsForEntity = Relations[entityType];\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"no relations for \" + entityType);\r\n\t\t}\r\n\r\n\t\tif (!entity) {\r\n\t\t\tentity = new RestBeans[entityType]();\r\n\t\t}\r\n\t\tif (!relationsForEntity) {\r\n\t\t\t// if there are no relations defined, a simple FormBinder will be enough\r\n\t\t\tvar sections;\r\n\t\t\ttry {\r\n\t\t\t\tsections = Forms[entityType];\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\"no sections for \" + entityType);\r\n\t\t\t}\r\n\t\t\tif (!sections) {\r\n\t\t\t\tsections = {};\r\n\t\t\t} else {\r\n\t\t\t\tif (sections instanceof Array) {\r\n\t\t\t\t\tsections = {\r\n\t\t\t\t\t\tsections: sections\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.assertPersistIsHandled(sections);\r\n\t\t\tview = new FormBinder(CopyUtil.copyConfig(sections, {\r\n\t\t\t\tentity: entity,\r\n\t\t\t\tignoredMembers: {\r\n\t\t\t\t\tlinks: true,\r\n\t\t\t\t\tpage: true\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t} else {\r\n\t\t\tif (relationsForEntity instanceof Array) {\r\n\t\t\t\trelationsForEntity = {\r\n\t\t\t\t\trelations: relationsForEntity\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t// if there are relations use a RelationFormBinder that allows switching through the related entities\r\n\t\t\tvar rels = [{\r\n\t\t\t\t\tlink: \"self\",\r\n\t\t\t\t\tname: \"self\",\r\n\t\t\t\t\tlabelText: \"Basic\"\r\n\t\t\t\t}];\r\n\t\t\tfor (var i in relationsForEntity.relations) {\r\n\t\t\t\trels.push(relationsForEntity.relations[i]);\r\n\t\t\t}\r\n\t\t\t// relationsForEntity.relations = rels;\r\n\t\t\tvar relCopy = {\r\n\t\t\t\tentity: entity,\r\n\t\t\t\trelations: rels,\r\n\t\t\t\tlisteners: relationsForEntity.listeners\r\n\t\t\t};\r\n\t\t\tthis.assertPersistIsHandled(relCopy);\r\n\t\t\tview = new RelationFormBinder(relCopy);\r\n\t\t}\r\n\r\n\t\treturn view;\r\n\t},\r\n\tassertPersistIsHandled: function(config) {\r\n\t\tif (!config.listeners) {\r\n\t\t\tconfig.listeners = {};\r\n\t\t}\r\n\t\tif (!config.listeners.beforePersist) {\r\n\t\t\tconfig.listeners.beforePersist = function(entry, inputsByMemberOrKey, cb) {\r\n\t\t\t\tconsole.log(\"using default persist handler\");\r\n\t\t\t\tcb();\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\tsubmit: function(e) {\r\n\t\tthis.activeView.fireEvent(\"beforePersist\", this.activeView.entity, this.activeView.keyedInputs, this.activeView.entity.createPersistCallback(true, false));\r\n\t\tif(e) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tcancel: function(e) {\r\n\t\tthis.activeView.destroy();\r\n\t\tthis.activeView = undefined;\r\n\t\tthis.wrapper.removeClass(\"hidden\");\r\n\t\tthis.form.addClass(\"hidden\");\r\n\t\tif(e) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\treindex: function(e) {\r\n\t\tif(this.initialPage) {\r\n\t\t\tthis.initialPage.follow({\r\n\t\t\t\trel: \"reindex\",\r\n\t\t\t\tcb: function() {\r\n\t\t\t\t\tthis.reload();\r\n\t\t\t\t},\r\n\t\t\t\tscope: this\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(e) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\treload: function(e) {\r\n\t\tif(this.dataProvider) {\r\n\t\t\tthis.dataProvider.loadPage();\r\n\t\t}\r\n\t\tif(e) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tpreviousPage: function() {\r\n\t\tif(this.dataProvider) {\r\n\t\t\tvar no = this.dataProvider.getPageOffset()-this.dataProvider.getPageSize();\r\n\t\t\tif(no < 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.dataProvider.setPageOffset(no, true);\r\n\t\t}\r\n\t},\r\n\tnextPage: function() {\r\n\t\tif(this.dataProvider) {\r\n\t\t\tvar no = this.dataProvider.getPageOffset()+this.dataProvider.getPageSize();\r\n\t\t\tif(no > this.dataProvider.getTotalPages()*this.dataProvider.getPageSize()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.dataProvider.setPageOffset(no, true);\r\n\t\t}\r\n\t}\r\n});\r\nEntityBrowser.init = function() {\r\n\t$(\".entity-browser\").each(function(){\r\n\t\tnew EntityBrowser().bindTo(this);\r\n\t});\r\n}\r\nreturn EntityBrowser;","initMethod@STRING":"init","proxy@STRING":"","moduleId@STRING":"","export@STRING":""}}
