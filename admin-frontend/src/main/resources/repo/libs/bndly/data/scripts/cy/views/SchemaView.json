{"type":"cy:bean","properties":{"beanType@STRING":"cy:requiremodule","name@STRING":"SchemaView","dependencies@STRING":["/libs/bndly/data/scripts/cy/ui/Text","/libs/bndly/data/scripts/cy/ui/ViewComponent","/libs/bndly/data/scripts/cy/ui/container/ViewContainer","/libs/bndly/data/scripts/cy/RestBeans","/libs/vendor/d3"],"script@STRING":"var SchemaView = ViewComponent.extend({\r\n\tconstruct: function(config) {\r\n\t\tif (!config) {\r\n\t\t\tconfig = {};\r\n\t\t}\r\n\t\tconfig.titleText = new Text({value: \"Deployed Schema Status\", tag: \"h1\"});\r\n\t\tconfig.container = new ViewContainer({\r\n\t\t\titems: [\r\n\t\t\t]\r\n\t\t});\r\n\t\tthis.callSuper(arguments, config);\r\n\t},\r\n\tdestroy: function() {\r\n\t\tthis.invokeSuper(arguments);\r\n\t\tthis.titleText.destroy();\r\n\t},\r\n\trenderTo: function(renderTarget) {\r\n\t\tthis.renderTitle(renderTarget);\r\n\t\tthis.container.renderTo(renderTarget);\r\n\t\tthis.schemaRenderTarget = $(renderTarget).append(\"<div id=\\\"schemaRenderTarget\\\"></div>\").children().last();\r\n\t\tRestBeans.root.follow({\r\n\t\t\trel: \"schema\",\r\n\t\t\tcb: this.schemaLoaded,\r\n\t\t\tscope: this\r\n\t\t});\r\n\t\tthis.invokeSuper(arguments);\r\n\t},\r\n\trenderTitle: function(renderTarget) {\r\n\t\tif (this.titleText) {\r\n\t\t\tthis.titleText.renderTo(renderTarget);\r\n\t\t}\r\n\t},\r\n\tschemaLoaded: function(schema) {\r\n\t\tthis.schema = schema;\r\n\t\tif(schema.getItems()) {\r\n\t\t\tschema.getItems().each(function(item){\r\n\t\t\t\tif(item.getName() === \"ebx\") {\r\n\t\t\t\t\tthis.schema=item;\r\n\t\t\t\t\tthis.renderSchema();\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t}\r\n\t},\r\n\trenderSchema: function() {\r\n\t\tif (!this.schema) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (!this.schemaRenderTarget) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// render\r\n\r\n\t\tvar rootNode = {\r\n\t\t\tid: \"rootNode\",\r\n\t\t\tname: \"ActiveRecord\",\r\n\t\t\tdata: {},\r\n\t\t\tchildren: []\r\n\t\t};\r\n\t\tvar types = {};\r\n\t\tvar json = {\r\n\t\t\tnodes: [],\r\n\t\t\tlinks: []\r\n\t\t};\r\n\t\tvar i = 0;\r\n\t\tvar assertNodeExists = function(attributeHolder) {\r\n\t\t\tvar n = attributeHolder.getName();\r\n\t\t\tif (!types[n]) {\r\n\t\t\t\ttypes[n] = {\r\n\t\t\t\t\ttitle: n,\r\n\t\t\t\t\tname: n,\r\n\t\t\t\t\tgroup: i\r\n\t\t\t\t};\r\n\t\t\t\ti++;\r\n\t\t\t\tjson.nodes.push(types[n]);\r\n\t\t\t}\r\n\t\t\treturn types[n];\r\n\t\t};\r\n\t\t// create the raw nodes\r\n\t\tthis.schema.getTypes().each(function(type) {\r\n\t\t\tassertNodeExists(type);\r\n\t\t}, this);\r\n\r\n\t\tthis.schema.getMixins().each(function(mixin) {\r\n\t\t\tassertNodeExists(mixin);\r\n\t\t}, this);\r\n\r\n\t\t//rebuild the hierarchy\r\n\t\tthis.schema.getTypes().each(function(type) {\r\n\t\t\tvar n = type.getName();\r\n\t\t\ttype.getAttributes().getItems().each(function(att) {\r\n\t\t\t\tvar attHolder;\r\n\t\t\t\tif ((att instanceof RestBeans[\"TypeAttributeBean\"])) {\r\n\t\t\t\t\tattHolder = att.get(\"typeBean\");\r\n\t\t\t\t} else if ((att instanceof RestBeans[\"MixinAttributeBean\"])) {\r\n\t\t\t\t\tattHolder = att.get(\"mixinBean\");\r\n\t\t\t\t} else if ((att instanceof RestBeans[\"JSONAttributeBean\"])) {\r\n\t\t\t\t\tattHolder = att.get(\"namedAttributeHolder\");\r\n\t\t\t\t}\r\n\t\t\t\tif (attHolder) {\r\n\t\t\t\t\tjson.links.push({\r\n\t\t\t\t\t\tsource: types[n].group,\r\n\t\t\t\t\t\ttarget: types[attHolder.getName()].group,\r\n\t\t\t\t\t\tvalue: 1\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\tif (type.getParentTypeName()) {\r\n\t\t\t\tjson.links.push({\r\n\t\t\t\t\tsource: types[n].group,\r\n\t\t\t\t\ttarget: types[type.getParentTypeName()].group,\r\n\t\t\t\t\tvalue: 2\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\trootNode.children.push(assertNodeExists(type));\r\n\t\t\t}\r\n\t\t\tvar tmpMixins = type.getMixins();\r\n\t\t\tif(tmpMixins) {\r\n\t\t\t\ttmpMixins.each(function(mixin){\r\n\t\t\t\t\tjson.links.push({\r\n\t\t\t\t\t\tsource: types[n].group,\r\n\t\t\t\t\t\ttarget: types[mixin].group,\r\n\t\t\t\t\t\tvalue: 2\r\n\t\t\t\t\t});\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}, this);\r\n\r\n\t\tvar width = 1200;\r\n\t\tvar height = 800;\r\n\t\tvar svg = $(this.schemaRenderTarget).append(\"<svg id=\\\"cloud\\\" width=\\\"\"+width+\"\\\" height=\\\"\"+height+\"\\\"><defs><marker id=\\\"arrow\\\" viewbox=\\\"0 -5 10 10\\\" refX=\\\"18\\\" refY=\\\"0\\\"markerWidth=\\\"6\\\" markerHeight=\\\"6\\\" orient=\\\"auto\\\"><path d=\\\"M0,-5L10,0L0,5Z\\\"></marker></defs></svg>\").children().last();\r\n\t\tvar color = d3.scale.category10();\r\n\r\n\t\tvar force = d3.layout.force()\r\n\t\t\t\t.charge(-180)\r\n\t\t\t\t.linkDistance(70)\r\n\t\t\t\t.size([width, height]);\r\n\r\n\t\tvar svg = d3.select(\"#cloud\");\r\n\r\n\t\tforce\r\n\t\t\t\t.nodes(json.nodes)\r\n\t\t\t\t.links(json.links)\r\n\t\t\t\t.start();\r\n\r\n\t\tvar link = svg.selectAll(\".link\")\r\n\t\t\t\t.data(json.links)\r\n\t\t\t\t.enter().append(\"line\")\r\n\t\t\t\t.attr(\"marker-end\", function(d) {\r\n\t\t\t\t\tif(d.value === 2) {\r\n\t\t\t\t\t\treturn \"url(#arrow)\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\t})\r\n\t\t\t\t.attr(\"class\", \"link\");\r\n\r\n\t\tvar node = svg.selectAll(\".node\")\r\n\t\t\t\t.data(json.nodes)\r\n\t\t\t\t.enter().append(\"g\")\r\n\t\t\t\t.attr(\"class\", \"node\")\r\n\t\t\t\t.call(force.drag);\r\n\r\n\t\tnode.append(\"image\")\r\n\t\t\t\t.attr(\"xlink:href\", \"https://github.com/favicon.ico\")\r\n\t\t\t\t.attr(\"x\", -8)\r\n\t\t\t\t.attr(\"y\", -8)\r\n\t\t\t\t.attr(\"width\", 16)\r\n\t\t\t\t.attr(\"height\", 16);\r\n\r\n\t\tnode.append(\"circle\")\r\n\t\t\t\t.attr(\"r\", 8)\r\n\t\t\t\t.style(\"fill\", function(d) {\r\n\t\t\t\t\treturn color(d.group);\r\n\t\t\t\t});\r\n\r\n\t\tnode.append(\"text\")\r\n\t\t\t\t.attr(\"dx\", 12)\r\n\t\t\t\t.attr(\"dy\", \".35em\")\r\n\t\t\t\t.text(function(d) {\r\n\t\t\t\t\treturn d.name;\r\n\t\t\t\t});\r\n\r\n\t\tforce.on(\"tick\", function() {\r\n\t\t\tlink\r\n\t\t\t\t.attr(\"x1\", function(d) {\r\n\t\t\t\t\treturn d.source.x;\r\n\t\t\t\t})\r\n\t\t\t\t.attr(\"y1\", function(d) {\r\n\t\t\t\t\treturn d.source.y;\r\n\t\t\t\t})\r\n\t\t\t\t.attr(\"x2\", function(d) {\r\n\t\t\t\t\treturn d.target.x;\r\n\t\t\t\t})\r\n\t\t\t\t.attr(\"y2\", function(d) {\r\n\t\t\t\t\treturn d.target.y;\r\n\t\t\t\t})\r\n\t\t\t;\r\n\r\n\t\t\tnode.attr(\"transform\", function(d) {\r\n\t\t\t\treturn \"translate(\" + d.x + \",\" + d.y + \")\";\r\n\t\t\t});\r\n\t\t});\r\n\r\n\r\n\r\n\t\treturn true;\r\n\t}\r\n});\r\nreturn SchemaView;","initMethod@STRING":"","proxy@STRING":"","moduleId@STRING":"","export@STRING":""}}
