{"type":"cy:bean","properties":{"beanType@STRING":"cy:requiremodule","name@STRING":"FormBinder","script@STRING":"var FormBinder = ViewComponent.extend({\r\n\tconstruct: function(config) {\r\n\t\tif (!config) {\r\n\t\t\tconfig = {};\r\n\t\t}\r\n\t\tif (!config.formBindings) {\r\n\t\t\tconfig.formBindings = {};\r\n\t\t}\r\n\t\tconfig.configured = {};\r\n\r\n\t\tif (config.sections) {\r\n\t\t\tfor (var i in config.sections) {\r\n\t\t\t\tvar section = config.sections[i];\r\n\t\t\t\tif (section) {\r\n\t\t\t\t\tif (section.items) {\r\n\t\t\t\t\t\tfor (var j in section.items) {\r\n\t\t\t\t\t\t\tvar item = section.items[j];\r\n\t\t\t\t\t\t\tif (item.member) {\r\n\t\t\t\t\t\t\t\tconfig.configured[item.member] = true;\r\n\t\t\t\t\t\t\t\tconfig.formBindings[item.member] = section.items[j];\r\n\t\t\t\t\t\t\t} else if (item.key) {\r\n\t\t\t\t\t\t\t\tconfig.configured[item.key] = true;\r\n\t\t\t\t\t\t\t\tconfig.formBindings[item.key] = section.items[j];\r\n\t\t\t\t\t\t\t\tsection.items[j].useKey = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (section.member) {\r\n\t\t\t\t\t\tconfig.configured[section.member] = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.callSuper(arguments, config);\r\n\t},\r\n\tbuildForm: function(keyedInputs) {\r\n\t\tvar items = [];\r\n\t\tkeyedInputs = keyedInputs ? keyedInputs : {};\r\n\t\tthis.renderMembersToForm(this.entity, items, keyedInputs);\r\n\t\tvar form = new Form({\r\n\t\t\titems: items\r\n\t\t});\r\n\t\treturn form;\r\n\t},\r\n\tdestroy: function() {\r\n\t\tthis.form.destroy();\r\n\t\tthis.invokeSuper(arguments);\r\n\t},\r\n\trenderFormElementsTo: function(renderTarget) {\r\n\t\tvar _this = this, keyedInputs = {};\r\n\t\tif (_this.help) {\r\n\t\t\tvar helpBlock = new Text({value: _this.help, cls: \"help-block\"});\r\n\t\t\thelpBlock.renderTo($(renderTarget));\r\n\t\t}\r\n\t\trenderMembersToForm(_this.entity, renderTarget, keyedInputs);\r\n\t},\r\n\trenderMemberToForm: function(entity, memberOrKey, formItems, keyedInputs) {\r\n\t\tif (this.ignoredMembers && this.ignoredMembers[memberOrKey]) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!this.formBindings[memberOrKey]) {\r\n\t\t\tthis.formBindings[memberOrKey] = {};\r\n\t\t}\r\n\t\tvar binding = this.formBindings[memberOrKey];\r\n\t\tvar\r\n\t\t\t\tinput,\r\n\t\t\t\tlabelText = (!binding.labelText) ? memberOrKey : binding.labelText,\r\n\t\t\t\tisMandatory = binding.mandatory;\r\n\t\tif (isMandatory) {\r\n\t\t\tlabelText += \"*\";\r\n\t\t}\r\n\r\n\t\tvar type = entity.memberType(memberOrKey);\r\n\t\tif (!type && binding.member) {\r\n\t\t\tconsole.warn(\"unsupported member '\" + memberOrKey + \"' in type '\" + entity.clazzName() + \"'\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (binding.constructorFn) {\r\n\t\t\tif (typeof (binding.constructorFn) === \"string\") {\r\n\t\t\t\tbinding.constructorFn = InputTypeRegistry.getInputConstructor(binding.constructorFn);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (binding.key) {\r\n\t\t\tconsole.log(\"creating keyed form item\");\r\n\t\t\tif (binding.constructorFn) {\r\n\t\t\t\tinput = new binding.constructorFn(CopyUtil.copyConfig(binding.inputConfig, {\r\n\t\t\t\t\tdisabled: binding.generated,\r\n\t\t\t\t\tentity: entity,\r\n\t\t\t\t\tkey: memberOrKey,\r\n\t\t\t\t\tlabel: labelText\r\n\t\t\t\t}));\r\n\t\t\t\tformItems.push(input);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar isSimpleType = type === \"String\" || type === \"Number\" || type === \"Date\" || type === \"Boolean\";\r\n\t\t\tvar isCollection = entity.memberIsCollection(memberOrKey);\r\n\t\t\tvar isReferenceable = false;\r\n\r\n\t\t\tvar formElementId = entity.clazzName() + \"_\" + memberOrKey;\r\n\t\t\tbinding.id = formElementId;\r\n\r\n\t\t\tvar deRefed;\r\n\t\t\tif (!isSimpleType) {\r\n\t\t\t\tif (!isCollection) {\r\n\t\t\t\t\tvar selectable = new RestBeans[type]();\r\n\t\t\t\t\tdeRefed = selectable.deRef();\r\n\t\t\t\t\tisReferenceable = deRefed !== undefined && deRefed.clazzName() !== selectable.clazzName();\r\n\t\t\t\t\t// isReferenceable = deRefed.extends(\"AbstractEntityReferenceRestBean\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (isSimpleType) {\r\n\t\t\t\tvar inputType = \"text\", constructor;\r\n\t\t\t\tif (binding.constructorFn) {\r\n\t\t\t\t\tconstructor = binding.constructorFn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconstructor = InputTypeRegistry.getInputConstructor(\"TextInput\");\r\n\t\t\t\t\tif (type === \"Number\") {\r\n\t\t\t\t\t\tinputType = \"number\";\r\n\t\t\t\t\t} else if (type === \"Date\") {\r\n\t\t\t\t\t\tconstructor = InputTypeRegistry.getInputConstructor(\"DateInput\");\r\n\t\t\t\t\t} else if (type === \"Boolean\") {\r\n\t\t\t\t\t\tconstructor = InputTypeRegistry.getInputConstructor(\"BooleanInput\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tvar cfg = CopyUtil.copyConfig(binding.inputConfig, {\r\n\t\t\t\t\ttype: inputType,\r\n\t\t\t\t\tdisabled: binding.generated,\r\n\t\t\t\t\tentity: entity,\r\n\t\t\t\t\tmember: memberOrKey,\r\n\t\t\t\t\tlabel: labelText\r\n\t\t\t\t});\r\n\t\t\t\tinput = new constructor(cfg);\r\n\t\t\t\tformItems.push(input);\r\n\t\t\t} else {\r\n\t\t\t\tif (!isCollection) {\r\n\t\t\t\t\tif (isReferenceable && !binding.embedded) {\r\n\t\t\t\t\t\tvar entryLabelFn = undefined;\r\n\t\t\t\t\t\tif (binding.inputConfig)\r\n\t\t\t\t\t\t\tentryLabelFn = binding.inputConfig.labelFn;\r\n\t\t\t\t\t\tif (binding.typeahead) {\r\n//\t\t\t\t\t\t\t\tconsole.log(\"found a typeahead\");\r\n\t\t\t\t\t\t\tvar cfg = CopyUtil.copyConfig(binding.inputConfig, {\r\n\t\t\t\t\t\t\t\tlabel: labelText,\r\n\t\t\t\t\t\t\t\tentity: entity,\r\n\t\t\t\t\t\t\t\tmember: memberOrKey,\r\n\t\t\t\t\t\t\t\tdisabled: binding.generated,\r\n\t\t\t\t\t\t\t\tentryLabelFn: entryLabelFn\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tinput = InputTypeRegistry.construct(\"TypeAheadInput\", cfg);\r\n\t\t\t\t\t\t\tformItems.push(input);\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// since the object can be referenced, we can render a selection\r\n\t\t\t\t\t\t\tvar cfg = CopyUtil.copyConfig(binding.inputConfig, {\r\n\t\t\t\t\t\t\t\tlabel: labelText,\r\n\t\t\t\t\t\t\t\tentity: entity,\r\n\t\t\t\t\t\t\t\tmember: memberOrKey,\r\n\t\t\t\t\t\t\t\tentryValueFn: function(entry) {\r\n\t\t\t\t\t\t\t\t\tif (!entry) {\r\n\t\t\t\t\t\t\t\t\t\tconsole.warn(\"getting value from empty entry\");\r\n\t\t\t\t\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvar entryLink = entry.hasLink(\"self\");\r\n\t\t\t\t\t\t\t\t\tif (!entryLink) {\r\n\t\t\t\t\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvar entryValue = entryLink.getHref();\r\n\t\t\t\t\t\t\t\t\treturn entryValue;\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tentryLabelFn: entryLabelFn,\r\n\t\t\t\t\t\t\t\titems: new EntityCollection({\r\n\t\t\t\t\t\t\t\t\tproto: deRefed\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tcfg.items.load();\r\n\t\t\t\t\t\t\tif (!isMandatory) {\r\n\t\t\t\t\t\t\t\tcfg.allowEmpty = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tinput = InputTypeRegistry.construct(\"SelectInput\", cfg);\r\n\t\t\t\t\t\t\tformItems.push(input);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// embedded because the object can not be referenced or explicitly embedded\r\n\t\t\t\t\t\tif (!binding.labelText) {\r\n\t\t\t\t\t\t\tlabelText = undefined;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar fsItems = [], fs = new FieldSet({\r\n\t\t\t\t\t\t\tlegend: labelText,\r\n\t\t\t\t\t\t\titems: fsItems\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tformItems.push(fs);\r\n\t\t\t\t\t\tvar subCfg = binding.config;\r\n\t\t\t\t\t\tif (!subCfg) {\r\n\t\t\t\t\t\t\tsubCfg = {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsubCfg.ignoredMembers = this.ignoredMembers;\r\n\t\t\t\t\t\tvar subEntity = this.entity.get(memberOrKey);\r\n\t\t\t\t\t\tif (!subEntity) {\r\n\t\t\t\t\t\t\tvar t = type;\r\n\t\t\t\t\t\t\tif (deRefed) {\r\n\t\t\t\t\t\t\t\tt = deRefed.clazzName();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsubEntity = new RestBeans[t]();\r\n\t\t\t\t\t\t\tthis.entity.set(memberOrKey, subEntity, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsubCfg.entity = subEntity;\r\n\t\t\t\t\t\tvar subBinder = new FormBinder(subCfg);\r\n\t\t\t\t\t\tkeyedInputs[memberOrKey] = {};\r\n\t\t\t\t\t\tsubBinder.renderMembersToForm(subEntity, fsItems, keyedInputs[memberOrKey]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar entryClazzName = new RestBeans[type]().deRef().clazzName();\r\n\t\t\t\t\tvar input = InputTypeRegistry.construct(\"CollectionInput\", {\r\n\t\t\t\t\t\tlabel: labelText,\r\n\t\t\t\t\t\tdisabled: binding.generated,\r\n\t\t\t\t\t\tentryFactoryFn: function() {\r\n\t\t\t\t\t\t\treturn new RestBeans[entryClazzName]();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tentity: entity,\r\n\t\t\t\t\t\tmember: memberOrKey\r\n\t\t\t\t\t});\r\n\t\t\t\t\tformItems.push(input);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (input) {\r\n\t\t\tkeyedInputs[memberOrKey] = input;\r\n\t\t\tif (binding.init) {\r\n\t\t\t\tbinding.init(input, entity);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\trenderMembersToForm: function(entity, formItems, keyedInputs) {\r\n\t\tif (!this.keyedInputs) {\r\n\t\t\tthis.keyedInputs = keyedInputs;\r\n\t\t}\r\n\t\tif (this.sections) {\r\n\t\t\tfor (var i in this.sections) {\r\n\t\t\t\tvar section = this.sections[i];\r\n\t\t\t\tif (section) {\r\n\t\t\t\t\tif (section.member) {\r\n\t\t\t\t\t\tvar cfg = {};\r\n\t\t\t\t\t\tfor (var k in section) {\r\n\t\t\t\t\t\t\tif (k !== \"member\") {\r\n\t\t\t\t\t\t\t\tcfg[k] = section[k];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar subEntity = this.entity.get(section.member);\r\n\t\t\t\t\t\tvar type = this.entity.memberType(section.member);\r\n\t\t\t\t\t\tif (!type) {\r\n\t\t\t\t\t\t\tthrow new Error(\"could not determine type of member '\" + section.member + \"' in \" + entity.clazzName());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!subEntity) {\r\n\t\t\t\t\t\t\tsubEntity = new RestBeans[type]();\r\n\t\t\t\t\t\t\tthis.entity.set(section.member, subEntity, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar subBinder = new FormBinder({\r\n\t\t\t\t\t\t\tentity: subEntity,\r\n\t\t\t\t\t\t\tsections: [\r\n\t\t\t\t\t\t\t\tcfg\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tignoredMembers: this.ignoredMembers\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tkeyedInputs[section.member] = {};\r\n\t\t\t\t\t\tsubBinder.renderMembersToForm(subEntity, formItems, keyedInputs[section.member]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar fsItems = [], fs = new FieldSet({\r\n\t\t\t\t\t\t\tlegend: section.name,\r\n\t\t\t\t\t\t\tlabelPosition: section.labelPosition,\r\n\t\t\t\t\t\t\titems: fsItems\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tformItems.push(fs);\r\n\r\n\t\t\t\t\t\tif (section.autoRenderMembers) {\r\n\t\t\t\t\t\t\t// TODO: this is usefull when keeping stuff unconfigured\r\n\t\t\t\t\t\t\tentity.members().each(function(member) {\r\n\t\t\t\t\t\t\t\tif (this.ignoredMembers && this.ignoredMembers[member]) {\r\n\t\t\t\t\t\t\t\t\t// console.log(member+\" is ignored.\")\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (!this.configured[member]) {\r\n\t\t\t\t\t\t\t\t\tthis.renderMemberToForm(entity, member, fsItems, keyedInputs);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// console.log(member+\" is configured.\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (section.items) {\r\n\t\t\t\t\t\t\t\tfor (var j in section.items) {\r\n\t\t\t\t\t\t\t\t\tvar item = section.items[j];\r\n\t\t\t\t\t\t\t\t\tif (item.member || item.key) {\r\n\t\t\t\t\t\t\t\t\t\tthis.renderMemberToForm(entity, item.member ? item.member : item.key, fsItems, keyedInputs);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tentity.members().each(function(member) {\r\n\t\t\t\tif (this.ignoredMembers && this.ignoredMembers[member]) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.renderMemberToForm(entity, member, formItems, keyedInputs);\r\n\t\t\t}, this);\r\n\t\t}\r\n\t},\r\n\trenderFormActions: function(renderTarget) {\r\n\t\tif (this.actions) {\r\n\t\t\tthis.actionButtonGroup = $(renderTarget).append(\"<div class=\\\"btn-group\\\">\").children().last();\r\n\t\t\tthis.actionButtonsByEvent = {};\r\n\t\t\tfor (var i in this.actions) {\r\n\t\t\t\tvar action = this.actions[i];\r\n\t\t\t\tif (action.event) {\r\n\t\t\t\t\tvar label = action.labelText;\r\n\t\t\t\t\tif (!label) {\r\n\t\t\t\t\t\tlabel = action.event;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar btn = $(this.actionButtonGroup).append(\"<button class=\\\"btn\\\"></button>\").children().last();\r\n\t\t\t\t\tif (action.icon) {\r\n\t\t\t\t\t\tvar icon = $(btn).append(\"<i></i>\").children().last();\r\n\t\t\t\t\t\t$(icon).attr(\"class\", action.icon);\r\n\t\t\t\t\t\tlabel = \" \" + label;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$(btn).append(label);\r\n\t\t\t\t\tvar _this = this;\r\n\r\n\t\t\t\t\tvar createCB = function(event, _this, btn) {\r\n\t\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\t\t_this.fireEvent(event, _this, btn);\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t$(btn).click(createCB(action.event, _this, btn));\r\n\t\t\t\t\tthis.actionButtonsByEvent[action.event] = btn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\trenderTo: function(renderTarget, keyedInputs) {\r\n\t\tif(!keyedInputs) {\r\n\t\t\tkeyedInputs = this.keyedInputs;\r\n\t\t}\r\n\t\tthis.form = this.buildForm(keyedInputs);\r\n\t\tthis.form.renderTo(renderTarget);\r\n\t}\r\n});\r\nInputTypeRegistry.register(\"FormBinder\", FormBinder);\r\nreturn FormBinder;","initMethod@STRING":"","proxy@STRING":"","moduleId@STRING":"","dependencies@STRING":["/libs/bndly/data/scripts/cy/RestBeans","/libs/bndly/data/scripts/cy/LabelFunctions","/libs/bndly/data/scripts/cy/HTMLUtil","/libs/bndly/data/scripts/cy/ui/ViewComponent","/libs/bndly/data/scripts/cy/ui/container/Form","/libs/bndly/data/scripts/cy/FieldSet","/libs/bndly/data/scripts/cy/EntityCollection","/libs/bndly/data/scripts/cy/form/Forms","/libs/bndly/data/scripts/cy/CopyUtil","/libs/bndly/data/scripts/cy/ui/input/InputTypeRegistry","/libs/bndly/data/scripts/cy/ui/Text","/libs/bndly/data/scripts/cy/ui/input/InputTypeLoader"],"export@STRING":""}}
