{"type":"cy:bean","properties":{"beanType@STRING":"cy:requiremodule","name@STRING":"ViewContainer","dependencies@STRING":["/libs/bndly/data/scripts/cy/Collection","/libs/bndly/data/scripts/cy/ui/ViewComponent"],"script@STRING":"var ViewContainer = ViewComponent.extend({\r\n\tconstruct: function(config) {\r\n\t\tif (!config) {\r\n\t\t\tconfig = {};\r\n\t\t}\r\n\t\tif(!config.items) {\r\n\t\t\tconfig.items = new Collection();\r\n\t\t} else if(!(config.items instanceof Collection)) {\r\n\t\t\tconfig.items = new Collection(config.items);\r\n\t\t}\r\n\t\t\r\n\t\tthis.callSuper(arguments, config);\r\n\r\n\t\tthis.listen(config.items, \"inserted\", this.renderItemOnAdd, this);\r\n\t\tthis.listen(config.items, \"removed\", this.removeItem, this);\r\n\t},\r\n\trenderTo: function(renderTarget) {\r\n\t\tif(!this.renderTarget) {\r\n\t\t\tthis.renderTarget = renderTarget;\t\r\n\t\t}\r\n\t\tthis.invokeSuper(arguments);\r\n\t\tthis.renderItems();\r\n\t},\r\n\trenderItems: function() {\r\n\t\tif(this.rendered) {\r\n\t\t\tthis.items.each(function(entry) {\r\n\t\t\t\tthis.renderItem(entry);\r\n\t\t\t}, this);\t\r\n\t\t}\r\n\t},\r\n\trenderItemOnAdd: function(component) {\r\n\t\tthis.renderItem(component);\r\n\t},\r\n\trenderItem: function(component, renderTarget) {\r\n\t\trenderTarget = renderTarget ? renderTarget : this.renderTarget;\r\n\t\tif(this.rendered) {\r\n\t\t\tvar isViewComponent = component instanceof ViewComponent;\r\n\t\t\tif(isViewComponent) {\r\n\t\t\t\tcomponent.renderTo(renderTarget);\r\n\t\t\t}\t\r\n\t\t}\r\n\t},\r\n\tremoveItem: function(component) {\r\n\t\tcomponent.destroy();\r\n\t},\r\n\tdestroy: function() {\r\n\t\tthis.items.each(function(entry) {\r\n\t\t\tentry.destroy();\r\n\t\t}, this);\r\n\r\n\t\tthis.invokeSuper(arguments);\r\n\t}\r\n});\r\nreturn ViewContainer;","initMethod@STRING":"","proxy@STRING":"","moduleId@STRING":""}}
