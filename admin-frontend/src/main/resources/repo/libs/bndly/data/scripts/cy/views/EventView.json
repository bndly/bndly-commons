{"type":"cy:bean","properties":{"beanType@STRING":"cy:requiremodule","name@STRING":"EventView","dependencies@STRING":["/libs/bndly/data/scripts/cy/ui/ViewComponent","/libs/bndly/data/scripts/cy/ui/container/ViewContainer","/libs/bndly/data/scripts/cy/WebSocketLogger"],"script@STRING":"var EventView = ViewComponent.extend({\r\n\tconstruct: function(config) {\r\n\t\tif (!config) {\r\n\t\t\tconfig = {};\r\n\t\t}\r\n\t\tconfig.titleText = \"Events\";\r\n\t\tconfig.container = new ViewContainer({\r\n\t\t\titems: [\r\n\t\t\t]\r\n\t\t});\r\n\t\tthis.callSuper(arguments, config);\r\n\t\tWebSocketLogger.instance.addListener(\"onmessage\", this.onmessage, this);\r\n\t},\r\n\tdestroy: function() {\r\n\t\tWebSocketLogger.instance.removeListener(\"onmessage\", this.onmessage, this);\r\n\t\tthis.container.destroy();\r\n\t\tthis.invokeSuper(arguments);\r\n\t\r\n\t},\r\n\trenderTo: function(renderTarget) {\r\n\t\tthis.renderTarget=renderTarget;\r\n\t\tthis.pre = $(renderTarget).append(\"<pre></pre>\").children().last();\r\n\t\tthis.container.renderTo(renderTarget);\r\n\t\tthis.invokeSuper(arguments);\r\n\t},\r\n\tonmessage: function(ws, event) {\r\n\t\tif(this.pre) {\r\n\t\t\tvar d, i, entity, message, incrementBadge = 0, _this = this;\r\n\t\t\ttry {\r\n\t\t\t\td = JSON.parse(event.data);\r\n\t\t\t}catch (error) {\r\n\t\t\t\t// fail silently\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(d.event) {\r\n\t\t\t\tif(d.event.name) {\r\n\t\t\t\t\tif(d.data) {\r\n\t\t\t\t\t\tif(d.event.name === \"entityModification\" && d.data.entities && d.data.entities.length > 0) {\r\n\t\t\t\t\t\t\tfor(i=0;i<d.data.entities.length; i++) {\r\n\t\t\t\t\t\t\t\tentity = d.data.entities[i];\r\n\t\t\t\t\t\t\t\tmessage = d.event.name+\": \"+entity.modification+\": \"+entity.type+\" (id=\"+entity.id+\")\";\r\n\t\t\t\t\t\t\t\tthis.pre.prepend(message+\"\\n\");\r\n\t\t\t\t\t\t\t\tincrementBadge++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if(d.event.name === \"flushed\") {\r\n\t\t\t\t\t\t\tif(d.data.path) {\r\n\t\t\t\t\t\t\t\tmessage = \"flushed cache: \"+d.data.path+\" \"+(d.data.recursive ? \"recursive\" : \"non-recursive\");\r\n\t\t\t\t\t\t\t} else if(d.data.complete) {\r\n\t\t\t\t\t\t\t\tmessage = \"flushed cache: entire cache flushed\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(message) {\r\n\t\t\t\t\t\t\t\tthis.pre.prepend(message+\"\\n\");\r\n\t\t\t\t\t\t\t\tincrementBadge++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(incrementBadge) {\r\n\t\t\t\tif(!this.totalBadgeValue) {\r\n\t\t\t\t\tthis.totalBadgeValue = incrementBadge;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.totalBadgeValue += incrementBadge;\r\n\t\t\t\t}\r\n\t\t\t\tthis.fireEvent(\"badge\", this, this.totalBadgeValue, function() {\r\n\t\t\t\t\t_this.totalBadgeValue = undefined;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\nreturn EventView;","initMethod@STRING":"","proxy@STRING":"","moduleId@STRING":""}}
