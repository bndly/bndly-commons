{"type":"cy:bean","properties":{"beanType@STRING":"cy:requiremodule","name@STRING":"TypeAheadInput","dependencies@STRING":["/libs/bndly/data/scripts/cy/ui/Text","/libs/bndly/data/scripts/cy/ui/input/InputTypeRegistry","/libs/bndly/data/scripts/cy/SearchTableDataProvider","/libs/bndly/data/scripts/cy/Collection","/libs/bndly/data/scripts/cy/Task","/libs/bndly/data/scripts/cy/LabelFunctions","/libs/bndly/data/scripts/cy/RestBeans","/libs/bndly/data/scripts/cy/ui/input/TextInput"],"script@STRING":"var TypeAheadInput = TextInput.extend({\r\n\tconstruct: function (config) {\r\n\t\tif (!config) {\r\n\t\t\tconfig = {};\r\n\t\t}\r\n\t\tif (!config.entryLabelFn) {\r\n\t\t\tconfig.entryLabelFn = LabelFunctions;\r\n\t\t}\r\n\t\tif (!config.dataProvider) {\r\n\t\t\tif (config.entity && config.member) {\r\n\t\t\t\tvar memberType = config.entity.memberType(config.member);\r\n\t\t\t\tmemberType = RestBeans.getFullType(memberType);\r\n\t\t\t\tconfig.dataProvider = new SearchTableDataProvider({\r\n\t\t\t\t\tentityType: memberType\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tconfig.selectedIndex = -1;\r\n\t\tthis.callSuper(arguments, config);\r\n\t\tif (this.dataProvider) {\r\n\t\t\tthis.listen(this.dataProvider, \"load\", this.searchResultReceived, this);\r\n\t\t}\r\n\r\n\t},\r\n\tdestroy: function () {\r\n\t\targuments.callee.$parent.destroy.call(this);\r\n\t},\r\n\trenderTo: function (renderTarget) {\r\n\t\tthis.input = $(renderTarget).append(\"<input type=\\\"text\\\" class=\\\"form-control\\\"/>\").children().last();\r\n\t\tif (this.disabled) {\r\n\t\t\t$(this.input).attr(\"disabled\", \"\");\r\n\t\t}\r\n\t\tvar _this = this;\r\n\t\t$(this.input).keydown(function (e) {\r\n\t\t\t_this.keydown(e);\r\n\t\t});\r\n\t\t$(this.input).keyup(function (e) {\r\n\t\t\t_this.keyup(e);\r\n\t\t});\r\n\t\t$(this.input).focus(function () {\r\n\t\t\t(_this.searchResultList).show();\r\n\t\t});\r\n\t\t$(this.input).blur(function () {\r\n\t\t\t(_this.searchResultList).hide();\r\n\t\t\tif (_this.noResult) {\r\n\t\t\t\t$(_this.input).val(\"\");\r\n\t\t\t\t$(_this.noResultText).hide();\r\n\t\t\t}\r\n\t\t\tif (!$(_this.input).val()) {\r\n\t\t\t\t_this.setBoundValue(null);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.noResultText = $(renderTarget).append(\"<ul class=\\\"list-group\\\"><li class=\\\"list-group-item\\\">no results</li></ul>\").children().last();\r\n\t\t$(this.noResultText).hide();\r\n\t\tthis.searchResultList = $(renderTarget).append(\"<ul class=\\\"list-group typeahead\\\"></ul>\").children().last();\r\n\t\t// $(this.searchResultList).css({\r\n\t\t// \tposition: \"absolute\",\r\n\t\t// \twidth: $(this.input).outerWidth()\r\n\t\t// });\r\n\t\t$(this.searchResultList).hide();\r\n\t\tvar bv = this.getBoundValue();\r\n\t\tthis.setValue(bv);\r\n\t},\r\n\tkeyTriggersSearch: function (e) {\r\n\t\tvar ignoredKeyCodes = {\r\n\t\t\t9: true,\r\n\t\t\t13: true,\r\n\t\t\t16: true,\r\n\t\t\t19: true,\r\n\t\t\t20: true,\r\n\t\t\t27: true,\r\n\t\t\t33: true,\r\n\t\t\t34: true,\r\n\t\t\t35: true,\r\n\t\t\t36: true,\r\n\t\t\t37: true,\r\n\t\t\t38: true,\r\n\t\t\t39: true,\r\n\t\t\t40: true,\r\n\t\t\t45: true,\r\n\t\t\t91: true,\r\n\t\t\t92: true,\r\n\t\t\t112: true,\r\n\t\t\t113: true,\r\n\t\t\t114: true,\r\n\t\t\t115: true,\r\n\t\t\t116: true,\r\n\t\t\t117: true,\r\n\t\t\t118: true,\r\n\t\t\t119: true,\r\n\t\t\t120: true,\r\n\t\t\t121: true,\r\n\t\t\t122: true,\r\n\t\t\t123: true,\r\n\t\t\t144: true,\r\n\t\t\t145: true\r\n\t\t};\r\n\t\tvar isNoVisibleKey = e.shiftKey || e.ctrlKey || e.altKey || e.metaKey;\r\n\t\tif (isNoVisibleKey) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn ignoredKeyCodes[e.keyCode] ? false : true;\r\n\t},\r\n\tkeydown: function (e) {\r\n\t\tif (e.keyCode === 40) {\r\n\t\t\te.preventDefault();\r\n\t\t} else if (e.keyCode === 38) {\r\n\t\t\te.preventDefault();\r\n\t\t} else if (e.keyCode === 13) {\r\n\t\t\t// Prevent return from submitting any form here (needs to be in keydown instead of keyup).\r\n\t\t\t// Closes the dropdown and focuses it.\r\n\t\t\tif (this.task) {\r\n\t\t\t\tthis.task.cancel();\r\n\t\t\t}\r\n\t\t\tif (this.usedArrows) {\r\n\t\t\t\tvar binding = this.searchResultBindings[this.selectedIndex];\r\n\t\t\t\tthis.setValue(binding.entry);\r\n\t\t\t\tthis.setBoundValue(binding.entry);\r\n\t\t\t\t$(this.searchResultList).hide();\r\n\t\t\t} else {\r\n\t\t\t\tthis.submitSearch();\r\n\t\t\t}\r\n\t\t\te.preventDefault();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tkeyup: function (e) {\r\n\t\tif (e.keyCode === 40) {\r\n\t\t\t// Down-arrow should go to the first visible item.\r\n\t\t\tthis.incrementSelection();\r\n\t\t} else if (e.keyCode === 38) {\r\n\t\t\t// Up-arrow should go to the last visible item.\r\n\t\t\tthis.decrementSelection();\r\n\t\t} else if (this.input.val()) {\r\n\t\t\t// setup a delayed search\r\n\t\t\tif (this.keyTriggersSearch(e)) {\r\n\t\t\t\tthis.submitDelayedSearch();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.task) {\r\n\t\t\t\tthis.task.cancel();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tincrementSelection: function () {\r\n\t\tif(this.searchResultBindings) {\r\n\t\t\tthis.usedArrows = true;\r\n\t\t\tthis.selectedIndex++;\r\n\t\t\tif (this.selectedIndex === this.searchResultBindings.length) {\r\n\t\t\t\tthis.selectedIndex = 0;\r\n\t\t\t}\r\n\t\t\tthis.selectEntry();\r\n\t\t}\r\n\t},\r\n\tdecrementSelection: function () {\r\n\t\tif(this.searchResultBindings) {\r\n\t\t\tthis.usedArrows = true;\r\n\t\t\tif (this.selectedIndex === 0) {\r\n\t\t\t\tthis.selectedIndex = this.searchResultBindings.length;\r\n\t\t\t}\r\n\t\t\tthis.selectedIndex--;\r\n\t\t\tthis.selectEntry();\r\n\t\t}\r\n\t},\r\n\tselectEntry: function () {\r\n\t\tfor (var i in this.searchResultBindings) {\r\n\t\t\tvar li = this.searchResultBindings[i].li;\r\n\t\t\tvar a = this.searchResultBindings[i].a;\r\n\t\t\tif (i == this.selectedIndex) {\r\n\t\t\t\t$(li).addClass(\"active\");\r\n\t\t\t} else {\r\n\t\t\t\t$(li).removeClass(\"active\");\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tsubmitDelayedSearch: function () {\r\n\t\tif (this.dataProvider.searchTerm === this.buildSearchTerm()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this.task) {\r\n\t\t\tthis.task.cancel();\r\n\t\t}\r\n\t\tthis.task = new Task({\r\n\t\t\tfn: this.submitSearch,\r\n\t\t\tscope: this\r\n\t\t});\r\n\t\tthis.task.delay(500);\r\n\t},\r\n\tbuildSearchTerm: function () {\r\n\t\treturn \"*\" + this.input.val() + \"*\";\r\n\t},\r\n\tsubmitSearch: function () {\r\n\t\tthis.usedArrows = false;\r\n\t\tthis.selectedIndex = -1;\r\n\t\tthis.dataProvider.setSearchTerm(this.buildSearchTerm());\r\n\t\tthis.dataProvider.loadPage();\r\n\t},\r\n\tsearchResultReceived: function (p) {\r\n\t\tvar c = p;\r\n\t\tif (!(c instanceof Collection)) {\r\n\t\t\t// if we get a ListRestBean\r\n\t\t\tc = c.getItems();\r\n\t\t}\r\n\r\n\t\tthis.searchResultBindings = [];\r\n\t\t$(this.searchResultList).children().remove();\r\n\t\tif (c.isEmpty()) {\r\n\t\t\t$(this.noResultText).show();\r\n\t\t\tthis.noResult = true;\r\n\t\t} else {\r\n\t\t\tthis.noResult = false;\r\n\t\t\t$(this.noResultText).hide();\r\n\t\t\tc.each(function (item) {\r\n\t\t\t\tthis.addSearchResultItem(item);\r\n\t\t\t}, this);\r\n\t\t}\r\n\t},\r\n\taddSearchResultItem: function (item) {\r\n\t\tvar _this = this;\r\n\t\tvar label = this.entryLabelFn(item);\r\n\t\tvar li = $(this.searchResultList).append(\"<li class=\\\"list-group-item\\\"></li>\").children().last();\r\n\t\t\r\n\t\tvar a = new Text({value: label, tag: \"a\"});\r\n\t\ta.renderTo($(li));\r\n\t\tvar index = this.searchResultBindings.length;\r\n\t\t$(a.element).mousedown(function () {\r\n\t\t\t_this.input.val(label);\r\n\t\t\t_this.selectedValue = item;\r\n\t\t\t_this.selectedIndex = index;\r\n\t\t\t_this.setBoundValue(item);\r\n\t\t});\r\n\t\tthis.searchResultBindings.push({\r\n\t\t\tli: li,\r\n\t\t\ta: a,\r\n\t\t\tentry: item\r\n\t\t});\r\n\t},\r\n\tdiscoverRemote: function (bind, scope) {\r\n\t\tif (this.entity && this.member) {\r\n\t\t\tvar memberType = this.entity.memberType(this.member);\r\n\t\t\tnew RestBeans[memberType]().primaryResource({\r\n\t\t\t\tcb: function (primary) {\r\n\t\t\t\t\tvar link = primary.hasLink(\"typeahead\");\r\n\t\t\t\t\tif (link) {\r\n\t\t\t\t\t\tbind.call(scope, link.getHref());\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tscope: this\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\tgetValue: function () {\r\n\t\treturn this.selectedValue;\r\n\t},\r\n\tsetValue: function (value) {\r\n\t\tvar label = this.entryLabelFn(value);\r\n\t\tif (!label) {\r\n\t\t\tlabel = \"\";\r\n\t\t}\r\n\t\t$(this.input).val(label);\r\n\t\tthis.selectedValue = value;\r\n\t}\r\n});\r\nInputTypeRegistry.register(\"TypeAheadInput\", TypeAheadInput);\r\nreturn TypeAheadInput;","initMethod@STRING":"","proxy@STRING":"","moduleId@STRING":"","export@STRING":""}}
