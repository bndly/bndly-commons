{"type":"cy:bean","properties":{"beanType@STRING":"cy:requiremodule","name@STRING":"WebSocketLogger","dependencies@STRING":["/libs/bndly/data/scripts/cy/Observable"],"script@STRING":"var EventWebSocket = Observable.extend({\r\n\tconstruct: function(config) {\r\n\t\tif(!config) {\r\n\t\t\tconfig = {};\r\n\t\t}\r\n\t\tthis.callSuper(arguments, config);\r\n\t\tif(EventWebSocket.instance) {\r\n\t\t\tthrow new Error(\"there is already a websocket\");\r\n\t\t}\r\n\t},\r\n\tconnect: function(host){\r\n\t\tvar _this = this;\r\n\t\tthis.ws = new WebSocket(host);\r\n\t\tthis.ws.onopen = function(event){\r\n\t\t\t_this.onopen(event);\r\n\t\t};\r\n\t\tthis.ws.onmessage = function(event){\r\n\t\t\t_this.onmessage(event);\r\n\t\t};\r\n\t\tthis.ws.onerror = function(event){\r\n\t\t\t_this.onerror(event);\r\n\t\t};\r\n\t\tthis.ws.onclose = function(event){\r\n\t\t\t_this.onclose(event);\r\n\t\t};\r\n\t},\r\n\tonopen: function(event) {\r\n\t\tthis.fireEvent(\"onopen\", this, event);\r\n\t\tthis.sendMessage(\"hello from shop admin.\");\r\n\t},\r\n\tonmessage: function(event) {\r\n\t\tthis.fireEvent(\"onmessage\", this, event);\r\n\t},\r\n\tonerror: function(event) {\r\n\t\tthis.fireEvent(\"onerror\", this, event);\r\n\t},\r\n\tonclose: function(event) {\r\n\t\tthis.fireEvent(\"onclose\", this, event);\r\n\t},\r\n\tsendMessage: function(value) {\r\n\t\tif (this.ws.readyState !== WebSocket.OPEN) {\r\n\t\t\tconsole.warn(\"could not send message, because ready state was not open.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.ws.send(value);\r\n\t}\r\n});\r\nEventWebSocket.instance = new EventWebSocket();\r\nvar websocketUrl = (window.location.protocol === \"https:\" ? \"wss://\" : \"ws://\") + window.location.host + \"/websocket/\";\r\nEventWebSocket.instance.connect(websocketUrl);\r\nreturn EventWebSocket;","initMethod@STRING":"","proxy@STRING":"","moduleId@STRING":"","export@STRING":""}}
