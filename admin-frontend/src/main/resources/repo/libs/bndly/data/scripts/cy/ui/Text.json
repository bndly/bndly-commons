{"type":"cy:bean","properties":{"beanType@STRING":"cy:requiremodule","name@STRING":"Text","dependencies@STRING":["/libs/bndly/data/scripts/cy/ui/ViewComponent","/libs/bndly/data/scripts/cy/Value"],"script@STRING":"var Text = ViewComponent.extend({\r\n\tconstruct: function(config) {\r\n\t\tif (!config) {\r\n\t\t\tconfig = {};\r\n\t\t}\r\n\t\tif(!config.value || typeof(config.value) === \"string\") {\r\n\t\t\tconfig.value = new Value({\r\n\t\t\t\tvalue: config.value\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(!config.tag || typeof(config.tag) !== \"string\") {\r\n\t\t\tconfig.tag = \"span\";\r\n\t\t}\r\n\t\tconfig.value.addListener(\"changed\", this.valueHasChanged, this);\r\n\t\tthis.callSuper(arguments, config);\r\n\t},\r\n\trenderTo: function(renderTarget) {\r\n\t\tthis.element = $(renderTarget).append(\"<\"+this.tag+\"></\"+this.tag+\">\").children().last();\r\n\t\tif(this.cls && typeof(this.cls) === \"string\") {\r\n\t\t\t$(this.element).attr(\"class\", this.cls);\r\n\t\t}\r\n\t\tthis.rendered = true;\r\n\t\tthis.valueHasChanged(this.value.get(), this.value.get(), this.value);\r\n\t\tif(this.hidden) {\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t},\r\n\tsetCls: function(cls) {\r\n\t\tthis.cls = cls;\r\n\t\tif(this.cls && typeof(this.cls) === \"string\") {\r\n\t\t\t$(this.element).attr(\"class\", this.cls);\r\n\t\t}\r\n\t},\r\n\tvalueHasChanged: function(newValue) {\r\n\t\tif(newValue === null || newValue === undefined) {\r\n\t\t\tnewValue = \"\";\r\n\t\t}\r\n\t\t$(this.element).text(newValue);\r\n\t},\r\n\thide: function(){\r\n\t\tif(this.element) {\r\n\t\t\t$(this.element).hide();\r\n\t\t}\r\n\t},\r\n\tshow: function(){\r\n\t\tif(this.element) {\r\n\t\t\t$(this.element).show();\r\n\t\t}\r\n\t},\r\n\tdestroy: function() {\r\n\t\tthis.invokeSuper(arguments);\r\n\t\tthis.value.removeListener(\"changed\", this.valueHasChanged, this);\r\n\t\tif (this.element) {\r\n\t\t\t$(this.element).remove();\r\n\t\t}\r\n\t}\r\n});\r\nreturn Text;","initMethod@STRING":"","proxy@STRING":"","moduleId@STRING":""}}
